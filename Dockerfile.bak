# ===========================================
# Étape de construction - Installation des dépendances
# ===========================================
FROM python:3.11-alpine as builder

# Installation des dépendances système requises
RUN apk add --no-cache gcc musl-dev linux-headers

# Installation de Poetry
RUN pip install poetry==1.8.2

# Configuration du répertoire de travail
WORKDIR /app
COPY . .

# Installer les dépendances
RUN poetry config virtualenvs.create false && \
    poetry install --no-interaction --no-ansi

# ===========================================
# Étape d'exécution finale
# ===========================================
FROM python:3.11-alpine

# Copier les dépendances installées
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /app /app

# Définir les variables d'environnement
ENV CRAWL4_AI_BASE_DIRECTORY=/app/data
ENV PYTHONPATH=/app
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PYTHONFAULTHANDLER=1 \
    PATH="/app/.local/bin:$PATH" \
    DISABLE_GPU=1 \
    TF_CPP_MIN_LOG_LEVEL=2 \
    TF_ENABLE_ONEDNN_OPTS=0 \
    TORCH_USE_CUDA=0 \
    PYTORCH_CUDA_ALLOC_CONF=0

WORKDIR /app

# Exposer le port
EXPOSE 8000

# Définir l'utilisateur non-root
RUN groupadd -r appuser && useradd -r -g appuser -d /home/appuser -s /sbin/nologin -c "Docker image user" appuser
USER appuser

# Commande corrigée pour démarrer le service
CMD ["uvicorn", "src.crawl4ai_mcp:app", "--host", "0.0.0.0", "--port", "8000"]
