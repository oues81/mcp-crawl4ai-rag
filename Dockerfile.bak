# Étape de construction
FROM python:3.12-slim as builder

# Installer les dépendances système nécessaires
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Installer Poetry
RUN pip install --no-cache-dir poetry==1.8.2

# Définir les variables d'environnement pour Poetry
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_CREATE=false \
    POETRY_CACHE_DIR="/tmp/poetry_cache" \
    POETRY_HOME="/tmp/poetry"

# Copier les fichiers de dépendances
WORKDIR /app
COPY pyproject.toml poetry.lock ./


# Installer les dépendances Python
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir poetry && \
    poetry install --no-interaction --no-ansi --no-dev && \
    pip install --no-cache-dir crawl4ai[cpu]

# Étape d'exécution finale
FROM python:3.12-slim as production

# Définir les variables d'environnement
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    CRAWL4_AI_BASE_DIRECTORY="/data" \
    PYTHONPATH="/app:/app/knowledge_graphs"

# Installer les dépendances système
RUN apt-get update && \
    apt-get install -y --no-install-recommends libpq5 && \
    rm -rf /var/lib/apt/lists/*

# Créer l'utilisateur non-root
RUN addgroup --system appuser && \
    adduser --system --ingroup appuser appuser && \
    mkdir -p /data && \
    chown -R appuser:appuser /data

# Copier les packages installés depuis le builder
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin/uvicorn /usr/local/bin/uvicorn

# Créer le répertoire src et copier le code source
RUN mkdir -p /app/src
COPY --chown=appuser:appuser src/ /app/src/
COPY --chown=appuser:appuser main.py /app/

# Définir le répertoire de travail
WORKDIR /app
ENV PYTHONPATH="/app:${PYTHONPATH}"

# Passer à l'utilisateur non-root
USER appuser

# Exposer le port
EXPOSE 8002

# Commande de démarrage
CMD ["python", "main.py"]
