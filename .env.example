# Configuration du serveur MCP
# ==========================

# Transport pour le serveur MCP - 'sse' ou 'stdio' (par défaut: 'sse')
TRANSPORT=sse

# Hôte sur lequel le serveur doit écouter (si TRANSPORT=sse)
# Utilisez 0.0.0.0 pour Docker, localhost pour un usage local
HOST=0.0.0.0

# Port d'écoute du serveur (si TRANSPORT=sse)
PORT=8002

# Clé API OpenAI (requise pour les embeddings et modèles)
# Obtenez votre clé sur : https://platform.openai.com/api-keys
OPENAI_API_KEY=votre_cle_api_openai_ici

# Modèle à utiliser pour les résumés et embeddings contextuels
# Par défaut : gpt-4 (mais vous pouvez utiliser un modèle plus léger comme gpt-3.5-turbo)
MODEL_CHOICE=gpt-4

# Stratégies RAG avancées
# ======================

# Activer les embeddings contextuels pour une meilleure récupération (plus lent mais plus précis)
USE_CONTEXTUAL_EMBEDDINGS=false

# Activer la recherche hybride (combinaison de recherche vectorielle et par mots-clés)
USE_HYBRID_SEARCH=false

# Activer l'extraction et la recherche d'exemples de code
USE_AGENTIC_RAG=false

# Activer le réordonnancement des résultats pour améliorer la pertinence
USE_RERANKING=false

# Activer le graphe de connaissances (nécessite Neo4j)
USE_KNOWLEDGE_GRAPH=false

# Configuration Supabase (requise)
# ==============================

# URL de votre projet Supabase
# Obtenez cette valeur dans les paramètres de votre projet Supabase
# https://supabase.com/dashboard/project/<votre-id-projet>/settings/api
SUPABASE_URL=votre_url_supabase_ici

# Clé de service Supabase (SECRET_KEY dans les paramètres API)
SUPABASE_SERVICE_ROLE_KEY=votre_cle_service_role_ici

# Clé anonyme Supabase (clé publique)
SUPABASE_ANON_KEY=votre_cle_anonyme_ici

# Clé API Supabase (optionnelle, peut être identique à la clé de service)
SUPABASE_KEY=${SUPABASE_SERVICE_ROLE_KEY}

# Neo4j Configuration for Knowledge Graph Tools
# These are required for the AI hallucination detection and repository parsing tools
# Leave empty to disable knowledge graph functionality

# Neo4j connection URI - use bolt://localhost:7687 for local, neo4j:// for cloud instances
# IMPORTANT: If running the MCP server through Docker, change localhost to host.docker.internal
NEO4J_URI=bolt://localhost:7687

# Neo4j username (usually 'neo4j' for default installations)
NEO4J_USER=neo4j

# Neo4j password for your database instance
NEO4J_PASSWORD=

# Cache and Path Configurations
CACHE_DIR=/app/.cache
PIP_CACHE_DIR=/app/.cache/pip
XDG_CACHE_HOME=/app/.cache

# Application Paths
APP_DATA_DIR=/app/data
LOG_DIR=/app/logs

# Database Configuration (if using PostgreSQL)
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=mcp_crawl4ai
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_secure_password

# API Configuration
API_HOST=0.0.0.0
API_PORT=8002