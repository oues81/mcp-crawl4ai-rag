# Dockerfile pour l'image de base avec les dépendances lourdes
# Utilisation de l'image de développement CUDA qui inclut le compilateur NVCC
FROM nvidia/cuda:12.1.1-cudnn8-devel-ubuntu22.04

# Variables d'environnement
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONIOENCODING=UTF-8 \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    PATH="/root/.local/bin:$PATH" \
    # Configuration pour éviter les problèmes de cache pip
    PIP_CACHE_DIR=/root/.cache/pip \
    PIP_NO_CACHE_DIR=0 \
    # Configuration pour les modèles Hugging Face
    HF_HOME=/root/.cache/huggingface \
    # Configuration pour PyTorch
    TORCH_HOME=/root/.cache/torch \
    # Désactiver la compilation de flash-attn par défaut
    FLASH_ATTENTION_SKIP_CUDA_BUILD=1

# Installation des dépendances système
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt \
    apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    curl \
    git \
    libgl1 \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender1 \
    python3-pip \
    python3.10 \
    python3.10-venv \
    python3.10-dev \
    && rm -rf /var/lib/apt/lists/*

# Configuration de Python et pip
RUN ln -sf /usr/bin/python3.10 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip && \
    pip install --upgrade pip setuptools wheel

# Copier le fichier requirements d'abord pour utiliser le cache Docker
COPY requirements.txt /tmp/requirements.txt

# Installation des dépendances avec cache optimisé
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -r /tmp/requirements.txt \
    && rm /tmp/requirements.txt

# Création des dossiers de cache
RUN mkdir -p /root/.cache/huggingface /root/.cache/torch /root/.cache/pip

# Nettoyage pour réduire la taille de l'image
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Point d'entrée par défaut
CMD ["/bin/bash"]
