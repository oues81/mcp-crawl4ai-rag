# ===========================================
# MCP Crawl4AI RAG - Optimized CPU-only Image
# ===========================================

# Use Python 3.12 slim image as base
FROM python:3.12-slim as builder

# Build arguments
ARG PORT=8051

# Set environment variables
ENV \
    # Python settings
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONFAULTHANDLER=1 \
    PYTHONHASHSEED=random \
    # PIP settings
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100 \
    # Disable GPU
    DISABLE_GPU=1 \
    # Optimize PyTorch for CPU
    OMP_NUM_THREADS=1 \
    MKL_NUM_THREADS=1 \
    OPENBLAS_NUM_THREADS=1 \
    NUMEXPR_NUM_THREADS=1 \
    VECLIB_MAXIMUM_THREADS=1 \
    MKL_DYNAMIC=FALSE \
    OMP_DYNAMIC=FALSE \
    # Application settings
    PORT=${PORT} \
    HOST=0.0.0.0 \
    CRAWL4_AI_BASE_DIRECTORY=/app/data

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install uv (ultra-fast Python package installer)
RUN pip install --no-cache-dir uv

# Set working directory
WORKDIR /app

# Copy only the files needed for installing dependencies
COPY pyproject.toml README.md ./
COPY src/ ./src/

# Install Python dependencies using uv
RUN uv pip install --system -e .

# ===========================================
# Final image - Optimized for production
# ===========================================
FROM python:3.12-slim

# Create non-root user and group
RUN groupadd -r appgroup && \
    useradd -r -g appgroup -d /app -s /sbin/nologin appuser

# Set environment variables
ENV \
    # Python settings
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONFAULTHANDLER=1 \
    PYTHONHASHSEED=random \
    # PIP settings
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    # Disable GPU
    DISABLE_GPU=1 \
    # Optimize PyTorch for CPU
    OMP_NUM_THREADS=1 \
    MKL_NUM_THREADS=1 \
    OPENBLAS_NUM_THREADS=1 \
    NUMEXPR_NUM_THREADS=1 \
    VECLIB_MAXIMUM_THREADS=1 \
    MKL_DYNAMIC=FALSE \
    OMP_DYNAMIC=FALSE \
    # Application settings
    PORT=8051 \
    HOST=0.0.0.0 \
    CRAWL4_AI_BASE_DIRECTORY=/app/data

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy installed packages and application code
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /app /app

# Copy startup script and make it executable
COPY startup.sh /app/startup.sh
RUN chmod +x /app/startup.sh

# Create necessary directories and set permissions
RUN mkdir -p /app/data /app/logs && \
    chown -R appuser:appgroup /app && \
    chmod -R 755 /app

# Switch to non-root user
USER appuser

# Set working directory
WORKDIR /app

# Expose the port the app runs on
EXPOSE ${PORT}

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Default environment variables
ENV \
    # Application settings
    ENVIRONMENT=production \
    WORKERS=1 \
    LOG_LEVEL=info \
    # Disable Python bytecode generation
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    # Optimize Python for container
    PYTHONHASHSEED=random \
    PYTHONFAULTHANDLER=1 \
    # Disable GPU
    DISABLE_GPU=1 \
    # Optimize PyTorch for CPU
    OMP_NUM_THREADS=1 \
    MKL_NUM_THREADS=1 \
    OPENBLAS_NUM_THREADS=1 \
    NUMEXPR_NUM_THREADS=1 \
    VECLIB_MAXIMUM_THREADS=1 \
    MKL_DYNAMIC=FALSE \
    OMP_DYNAMIC=FALSE

# Command to run the application
ENTRYPOINT ["/app/startup.sh"]
CMD []
